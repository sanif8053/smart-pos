@model MVC.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "login100-form validate-form", role = "form" }))
{
    @Html.AntiForgeryToken()

    <span class="login100-form-title">
        Register As Shop Admin
    </span>
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.TextBoxFor(m => m.ShopName, new { placeholder = "Shop Name", @class = "input100" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-envelope" aria-hidden="true"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(m=>m.ShopName, "", new { @class = "text-danger" })
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", @class = "input100" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-envelope" aria-hidden="true"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.TextBoxFor(m => m.ShopLocation, new { placeholder = "Shop Location", @class = "input100" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-envelope" aria-hidden="true"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(m=>m.ShopLocation, "", new { @class = "text-danger" })
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.TextBoxFor(m => m.ShopCategory, new { placeholder = "Shop Category", @class = "input100" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-envelope" aria-hidden="true"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(m => m.ShopCategory, "", new { @class = "text-danger" })
    <div class="wrap-input100 validate-input" data-validate="Password is required">
        @Html.PasswordFor(m => m.Password, new { placeholder = "Enter Password", @class = "input100" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-lock" aria-hidden="true"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    <div class="wrap-input100 validate-input" data-validate="Confirm Password is required">
        @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "Confirm Password", @class = "input100" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-lock" aria-hidden="true"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
    <div class="container-login100-form-btn">
        <button type="submit" class="login100-form-btn">
            Sign up
        </button>
    </div>


    

    <div class="text-center p-t-50">
        <a class="txt2" href="@Url.Action("EmployeeRegister")">
            Register as Employee

        </a>
        <br />
        <a class="txt2" href="@Url.Action("Login")">
            Login
            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
        </a>

    </div>
        }
@section scripts
     {
    <script>
        function message() {

			var alertmessage = '@TempData["AlertMessage"]';
			var successmessage = '@TempData["SuccessMessage"]';
			if(alertmessage!=''){
				alertify.error(alertmessage);
			}
			else if (successmessage!=''){
				alertify.success(successmessage);
			}
			alert.success("I'm Here");
		}
    </script>


}
<!--<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}
    -->
