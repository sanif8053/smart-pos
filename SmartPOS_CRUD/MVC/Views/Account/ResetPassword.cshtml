@model MVC.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}





@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "login100-form validate-form", role = "form" }))
{
    @Html.AntiForgeryToken()
    <span class="login100-form-title">
        RESET PASSWORD
    </span>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.TextBoxFor(m => m.Email, new { @class = "input100", placeholder = "Username or Email" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-envelope" aria-hidden="true"></i>
        </span>
    </div>
    
    
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.PasswordFor(m => m.Password, new { @class = "input100", placeholder = "Password" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-lock" aria-hidden="true"></i>
        </span>
    </div>

    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100", placeholder = "Confirm Password" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <i class="fa fa-lock" aria-hidden="true"></i>
        </span>
    </div>

    <div class="container-login100-form-btn">
        <button type="submit" class="login100-form-btn">
            Reset Password
        </button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
