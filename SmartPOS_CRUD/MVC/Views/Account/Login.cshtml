@using MVC.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}
           @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <span class="login100-form-title">
                         Login
                    </span>
                    <div id="radios">
                        @{
                            foreach (var user in Model.UserList)
                            {
                                <label for="@user.Type" class="material-icons">
                                    <input type="radio" name="UserType" id="@user.Type" value="@user.Type" checked />
                                    @{
                                        if (user.Type == "admin")
                                        {
                                            <span>verified_user</span>
                                        }
                                        else
                                        {
                                            <span>group</span>
                                        }
                                    }

                                </label>

                            }
                        }

                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
                        @Html.TextBoxFor(m => m.Email, new { @class = "input100", placeholder = "Username or Email" })
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-envelope" aria-hidden="true"></i>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m=>m.Email, "" ,new { @class="text-danger"})
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        @Html.PasswordFor(m => m.Password, new { @class = "input100", placeholder = "Username or Password" })
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-lock" aria-hidden="true"></i>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    <div class="container-login100-form-btn">
                        <button type="submit" class="login100-form-btn">
                            Login
                        </button>
                    </div>
                    

                    <div class="text-center p-t-12">
                        <span class="txt1">
                            Forgot
                        </span>
                        <a class="txt2" href="@Url.Action("ForgotPassword")">
                            Username / Password?
                        </a>
                    </div>

                    <div class="text-center p-t-50">
                        <a class="txt2" href="@Url.Action("Register")">
                            Create Shop Admin Account
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a>
                        <br />
                        <a class="txt2" href="@Url.Action("EmployeeRegister")">
                            Create Employee Account
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a>
                    </div>
                }

 @section scripts
     {         
    <script>
        function message() {

			var alertmessage = '@TempData["AlertMessage"]';
			var successmessage = '@TempData["SuccessMessage"]';
			if(alertmessage!=''){
				alertify.error(alertmessage);
			}
			else if (successmessage!=''){
				alertify.success(successmessage);
			}
			alert.success("I'm Here");
		}
    </script>


}





<!--<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label"  })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="login100-form-btn" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>
    -->
